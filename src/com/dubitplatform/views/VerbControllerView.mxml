<?xml version="1.0" encoding="utf-8"?>
<VerbControllerViewBase
	 xmlns="uk.co.dubit.platform.components.verb.*" 
	 xmlns:mx="http://www.adobe.com/2006/mxml" 
	 width="100%" height="100%" visible="false" backgroundColor="black" backgroundAlpha="0.7">
	
	<mx:Script>
		<![CDATA[
			import uk.co.dubit.platform.scriptEngine.room.IChatRoom;
			import mx.effects.easing.Sine;
			import uk.co.dubit.utils.ArrayUtils;
			import mx.collections.ArrayCollection;
			import mx.events.MenuEvent;
			import mx.controls.Menu;
			import mx.events.CollectionEvent;
			import mx.binding.utils.ChangeWatcher;
			
			import uk.co.dubit.platform.components.verb.IVerb;
			import uk.co.dubit.utils.IAttributes;	
			
			private var menu : Menu;
					
			override public function set node(value:IAttributes):void
			{
				super.node = value;
				
				menu = Menu.createMenu(null, null, true);
				menu.labelField = "name";
				
				menu.filters = [new GlowFilter(000000,1,4,4,10,1), new DropShadowFilter(0, 45, 0x000000, 0.7, 5, 5, 1, 2)];
				menu.addEventListener(MenuEvent.ITEM_CLICK, handleMenuClick);
				
				menu.setStyle("fontFamily", "Deeko");
				menu.setStyle("openDuration", 0);
				
				if(verbController)
				{
					// Fired usually when the player clicks on an object that is verb enabled
					verbController.activeVerbs.addEventListener(CollectionEvent.COLLECTION_CHANGE, handleActiveVerbCollectionChange);
				}
			}
			
			private function handleActiveVerbCollectionChange (event : CollectionEvent) : void
			{
				if (menu) hideMenu();
				if (event.items.length) showMenu();
			}

			private function hideMenu () : void
			{
				menu.hide();				
				removeEventListener(Event.ENTER_FRAME, handleEnterFrame);
			}
			
			private function showMenu () : void
			{
				var p : Point = calculateMenuPosition();
				menu.dataProvider = toArrayOfNames(verbController.activeVerbs);	
				menu.show(p.x, p.y);
				
				// If the object moves calulate its new position
				addEventListener(Event.ENTER_FRAME, handleEnterFrame);
			}
						
			private function handleEnterFrame (event : Event) : void
			{
				var p : Point = calculateMenuPosition();
				
				menu.x = p.x;
				menu.y = p.y;
			}
			
			private function handleMenuClick (event : MenuEvent) : void
			{
				var verb : IVerb = ArrayUtils.findByProperty(verbController.activeVerbs.toArray(), "name", event.item); 
				if (verb) fireVerb(verb);	
				
				hideMenu();
			}
			
			private function toArrayOfNames (array : ArrayCollection) : Array
			{
				var a : Array = [];
				for each (var v : IVerb in array) a.push(v.name);
				return a;
			} 

			private function calculateMenuPosition () : Point
			{
				var p : Point = new Point(verbController.targettedGameObject.x, verbController.targettedGameObject.y);
				p = verbController.targettedGameObject.displayObject.scene.sprite.localToGlobal(p);
				p.x -= menu.width / 2;
				
				return p;
			}
		]]>
	</mx:Script>
		
</VerbControllerViewBase>
